# CMAKE generated file: DO NOT EDIT!
# Generated by "NMake Makefiles" Generator, CMake Version 3.17

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


.SUFFIXES: .hpux_make_needs_suffix_list


# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE
NULL=nul
!ENDIF
SHELL = cmd.exe

# The CMake executable.
CMAKE_COMMAND = C:\Users\SWQXDBA2\AppData\Local\JetBrains\Toolbox\apps\CLion\ch-0\203.7148.70\bin\cmake\win\bin\cmake.exe

# The command to remove a file.
RM = C:\Users\SWQXDBA2\AppData\Local\JetBrains\Toolbox\apps\CLion\ch-0\203.7148.70\bin\cmake\win\bin\cmake.exe -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = C:\Users\SWQXDBA2\CLionProjects\C++HomeWork

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = C:\Users\SWQXDBA2\CLionProjects\C++HomeWork\cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	C:\Users\SWQXDBA2\AppData\Local\JetBrains\Toolbox\apps\CLion\ch-0\203.7148.70\bin\cmake\win\bin\cmake.exe -E echo "No interactive CMake dialog available."
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache\fast: edit_cache

.PHONY : edit_cache\fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	C:\Users\SWQXDBA2\AppData\Local\JetBrains\Toolbox\apps\CLion\ch-0\203.7148.70\bin\cmake\win\bin\cmake.exe --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache\fast: rebuild_cache

.PHONY : rebuild_cache\fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start C:\Users\SWQXDBA2\CLionProjects\C++HomeWork\cmake-build-debug\CMakeFiles C:\Users\SWQXDBA2\CLionProjects\C++HomeWork\cmake-build-debug\CMakeFiles\progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) all
	$(CMAKE_COMMAND) -E cmake_progress_start C:\Users\SWQXDBA2\CLionProjects\C++HomeWork\cmake-build-debug\CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) clean
.PHONY : clean

# The main clean target
clean\fast: clean

.PHONY : clean\fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall\fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) preinstall
.PHONY : preinstall\fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named C__HomeWork

# Build rule for target.
C__HomeWork: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 /nologo -$(MAKEFLAGS) C__HomeWork
.PHONY : C__HomeWork

# fast build rule for target.
C__HomeWork\fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\build
.PHONY : C__HomeWork\fast

main.obj: main.cpp.obj

.PHONY : main.obj

# target to build an object file
main.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\main.cpp.obj
.PHONY : main.cpp.obj

main.i: main.cpp.i

.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s

.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\main.cpp.s
.PHONY : main.cpp.s

案例7_类的继承与派生\6-2_派生类的定义和使用.obj: 案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.obj

.PHONY : 案例7_类的继承与派生\6-2_派生类的定义和使用.obj

# target to build an object file
案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.obj
.PHONY : 案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.obj

案例7_类的继承与派生\6-2_派生类的定义和使用.i: 案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.i

.PHONY : 案例7_类的继承与派生\6-2_派生类的定义和使用.i

# target to preprocess a source file
案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.i
.PHONY : 案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.i

案例7_类的继承与派生\6-2_派生类的定义和使用.s: 案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.s

.PHONY : 案例7_类的继承与派生\6-2_派生类的定义和使用.s

# target to generate assembly for a file
案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.s
.PHONY : 案例7_类的继承与派生\6-2_派生类的定义和使用.cpp.s

案例7_类的继承与派生\6-3_派生类使用基类的成员函数.obj: 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.obj

.PHONY : 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.obj

# target to build an object file
案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.obj
.PHONY : 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.obj

案例7_类的继承与派生\6-3_派生类使用基类的成员函数.i: 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.i

.PHONY : 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.i

# target to preprocess a source file
案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.i
.PHONY : 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.i

案例7_类的继承与派生\6-3_派生类使用基类的成员函数.s: 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.s

.PHONY : 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.s

# target to generate assembly for a file
案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.s
.PHONY : 案例7_类的继承与派生\6-3_派生类使用基类的成员函数.cpp.s

案例7_类的继承与派生\6-4_学生派生类.obj: 案例7_类的继承与派生\6-4_学生派生类.cpp.obj

.PHONY : 案例7_类的继承与派生\6-4_学生派生类.obj

# target to build an object file
案例7_类的继承与派生\6-4_学生派生类.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-4_学生派生类.cpp.obj
.PHONY : 案例7_类的继承与派生\6-4_学生派生类.cpp.obj

案例7_类的继承与派生\6-4_学生派生类.i: 案例7_类的继承与派生\6-4_学生派生类.cpp.i

.PHONY : 案例7_类的继承与派生\6-4_学生派生类.i

# target to preprocess a source file
案例7_类的继承与派生\6-4_学生派生类.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-4_学生派生类.cpp.i
.PHONY : 案例7_类的继承与派生\6-4_学生派生类.cpp.i

案例7_类的继承与派生\6-4_学生派生类.s: 案例7_类的继承与派生\6-4_学生派生类.cpp.s

.PHONY : 案例7_类的继承与派生\6-4_学生派生类.s

# target to generate assembly for a file
案例7_类的继承与派生\6-4_学生派生类.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-4_学生派生类.cpp.s
.PHONY : 案例7_类的继承与派生\6-4_学生派生类.cpp.s

案例7_类的继承与派生\6-5_多重继承派生类构造函数.obj: 案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.obj

.PHONY : 案例7_类的继承与派生\6-5_多重继承派生类构造函数.obj

# target to build an object file
案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.obj
.PHONY : 案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.obj

案例7_类的继承与派生\6-5_多重继承派生类构造函数.i: 案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.i

.PHONY : 案例7_类的继承与派生\6-5_多重继承派生类构造函数.i

# target to preprocess a source file
案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.i
.PHONY : 案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.i

案例7_类的继承与派生\6-5_多重继承派生类构造函数.s: 案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.s

.PHONY : 案例7_类的继承与派生\6-5_多重继承派生类构造函数.s

# target to generate assembly for a file
案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.s
.PHONY : 案例7_类的继承与派生\6-5_多重继承派生类构造函数.cpp.s

案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.obj: 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.obj

.PHONY : 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.obj

# target to build an object file
案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.obj
.PHONY : 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.obj

案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.i: 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.i

.PHONY : 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.i

# target to preprocess a source file
案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.i
.PHONY : 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.i

案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.s: 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.s

.PHONY : 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.s

# target to generate assembly for a file
案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.s
.PHONY : 案例7_类的继承与派生\7-2_定义基类Point和派生类Circle，求圆的周长.cpp.s

案例7_类的继承与派生\7-3_师生信息管理.obj: 案例7_类的继承与派生\7-3_师生信息管理.cpp.obj

.PHONY : 案例7_类的继承与派生\7-3_师生信息管理.obj

# target to build an object file
案例7_类的继承与派生\7-3_师生信息管理.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\7-3_师生信息管理.cpp.obj
.PHONY : 案例7_类的继承与派生\7-3_师生信息管理.cpp.obj

案例7_类的继承与派生\7-3_师生信息管理.i: 案例7_类的继承与派生\7-3_师生信息管理.cpp.i

.PHONY : 案例7_类的继承与派生\7-3_师生信息管理.i

# target to preprocess a source file
案例7_类的继承与派生\7-3_师生信息管理.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\7-3_师生信息管理.cpp.i
.PHONY : 案例7_类的继承与派生\7-3_师生信息管理.cpp.i

案例7_类的继承与派生\7-3_师生信息管理.s: 案例7_类的继承与派生\7-3_师生信息管理.cpp.s

.PHONY : 案例7_类的继承与派生\7-3_师生信息管理.s

# target to generate assembly for a file
案例7_类的继承与派生\7-3_师生信息管理.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\C__HomeWork.dir\build.make /nologo -$(MAKEFLAGS) CMakeFiles\C__HomeWork.dir\案例7_类的继承与派生\7-3_师生信息管理.cpp.s
.PHONY : 案例7_类的继承与派生\7-3_师生信息管理.cpp.s

# Help Target
help:
	@echo The following are some of the valid targets for this Makefile:
	@echo ... all (the default if no target is provided)
	@echo ... clean
	@echo ... depend
	@echo ... edit_cache
	@echo ... rebuild_cache
	@echo ... C__HomeWork
	@echo ... main.obj
	@echo ... main.i
	@echo ... main.s
	@echo ... 案例7_类的继承与派生/6-2_派生类的定义和使用.obj
	@echo ... 案例7_类的继承与派生/6-2_派生类的定义和使用.i
	@echo ... 案例7_类的继承与派生/6-2_派生类的定义和使用.s
	@echo ... 案例7_类的继承与派生/6-3_派生类使用基类的成员函数.obj
	@echo ... 案例7_类的继承与派生/6-3_派生类使用基类的成员函数.i
	@echo ... 案例7_类的继承与派生/6-3_派生类使用基类的成员函数.s
	@echo ... 案例7_类的继承与派生/6-4_学生派生类.obj
	@echo ... 案例7_类的继承与派生/6-4_学生派生类.i
	@echo ... 案例7_类的继承与派生/6-4_学生派生类.s
	@echo ... 案例7_类的继承与派生/6-5_多重继承派生类构造函数.obj
	@echo ... 案例7_类的继承与派生/6-5_多重继承派生类构造函数.i
	@echo ... 案例7_类的继承与派生/6-5_多重继承派生类构造函数.s
	@echo ... 案例7_类的继承与派生/7-2_定义基类Point和派生类Circle，求圆的周长.obj
	@echo ... 案例7_类的继承与派生/7-2_定义基类Point和派生类Circle，求圆的周长.i
	@echo ... 案例7_类的继承与派生/7-2_定义基类Point和派生类Circle，求圆的周长.s
	@echo ... 案例7_类的继承与派生/7-3_师生信息管理.obj
	@echo ... 案例7_类的继承与派生/7-3_师生信息管理.i
	@echo ... 案例7_类的继承与派生/7-3_师生信息管理.s
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
.PHONY : cmake_check_build_system

